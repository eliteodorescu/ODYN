#	This file provides the means to configure various paramaters of analysis methods
#	and the possibility to choose the data to be analysed. This is achieved simply 
#	by changing the value after the '=' signs, e.g. the name of the satellite or file name
#	or replacing True with False to indicate the desired choice for boolean parameters.

#####################################################################################
'''CHOOSE PYTHON VERSION'''
#####################################################################################
pyv						='Python3'	# choose the version of Python you have installed 
								#	on your computer: either 'Python2' or 'Python3' 

#####################################################################################
'''RETRIEVE DATA TO BE ANALYZED'''
#####################################################################################
satellite				='VEX'	#	Choose the satellite data you want to analyse: 
								#	CLUSTER, ULYSSES, VEX, USER_DATA 
probe					='C3'	#	Choose the probe for multi-probe satellites (e.g. CLUSTER)
data_res				=1.		#	Input the resolution of data in seconds as float 
								#	(measurements/second), default is 1.s

#####################################################################################
'''GLOBAL VARIABLES'''
#####################################################################################
flag					=9999. 	#	Choose flag value for missing measurements - default is 9999. 
binno					=100	#	Input the number of bins for PDF and Structure 
								#	Functions methods, default is 100
choose_var_start		=0 		#	Choose the range of data columns to be analyzed 
choose_var_stop			=3		#	(excluding the time column(s)) - first column is 0, last column is -1

#####################################################################################
'''PLOTTING AND SAVING OF THE SELECTED DATA TO BE ANALYZED'''
#####################################################################################
plot_data				=True	#	Choose whether to plot the original data and show it on the screen
save_data_fig			=False	#	Choose whether to save the plot of the original data

#####################################################################################
'''SELECT DATA SUBSET / TRIM THE TIMESERIES '''
#####################################################################################
trim_TS					=False	#	Choose whether to trim the data, if set to True you will 
								#	be asked to input start and stop times in the notebook
plot_trimmed_data		=False	#	Choose whether to plot the trimmed data and show it on the screen

#####################################################################################
'''DATA PRE-PROCESSING: data-gaps management - interpolate, flag erroneous data'''
#####################################################################################
print_flags				=False	#	Choose whether to print on screen flagged data
plot_masked_data		=True 	#	Choose whether to plot the masked data (flag values 
								#	are ignored) and show it on the screen
save_masked_data		=True	#	Choose whether to save the masked data (flag values 
								#	are ignored) and show it on the screen

#####################################################################################
'''PSD - COMPUTATION, PLOTTING, SAVING'''
#####################################################################################
compute_PSD				=True	#	Choose whether to compute the PSD
psd_window				='hamming'	#	Choose window for Welch PSD: hamming, hanning, etc.
segment_magnitude		=512	#	Choose segment magnitude for Welch PSD in number of data points
overlap_percent			=0.9	#	Choose how much the segments overlap
plot_PSD				=True	#	Choose whether to plot the PSDs computed for all 
								#	chosen data variables (default is True)
draw_single_PSD			=False	#	Choose whether to draw one or multiple PSD (for multiple)
								#	variables on a single plot								
save_individual_PSD		=False	#	Choose whether to save a PSD plot for each of the 
								#	chosen data variables (default is False)
save_allinone_PSD		=True	#	Choose whether to save all PSD displayed on a single 
								#	plot (default is True)

#####################################################################################
'''PDF AND STRUCTURE FUNCTIONS - COMPUTATION, PLOTTING, SAVING'''
#####################################################################################
compute_PDF				=False	#	Choose whether to compute the PDF (default is False)
choose_PDF_var			=0		#	Choose the variable for which PDFs will be computed - 
								#	it corresponds to the data column (default is 0 which 
								#	corresponds to the first data-column)
draw_PDF				=True	# 	Choose whether to plot the PDFs
draw_SF					=True	# 	Choose whether to plot the SF
save_PDF				=False 	#	Choose whether to save the PDFs (set True only if 
								#	draw_PDF is true)
save_SF					=False	#	Choose whether to save the SFs (set True only if 
								#	draw_PDF is true)
rank_low				=1		#	Input lowest integer value of the rank for which SFs 
								#	will be computed (default is 1)					
rank_high				=6		#	Input highest value of the rank for which SFs 
								#	will be computed (default is 6)	
												
#####################################################################################
'''PARTITION FUNCTIONS - COMPUTATION, PLOTTING, SAVING'''
#####################################################################################
compute_PF				=False	#	Choose whether to compute PARTITION FUNCTIONS (PF)
								#	(default is False)
choose_PF_var			=0		#	Choose the variable for which PFs will be computed - 
								#	it corresponds to the data column (default is 0 which 
								#	corresponds to the first data-column)
draw_PF					=True	# 	Choose whether to plot the PFs
save_PF					=False 	#	Choose whether to save the PFs (set True only if 
								#	draw_PF is true)
rank_low				=-4		#	Input lowest integer value of the rank for which PFs 
								#	will be computed (default is -4)					
rank_high				=5		#	Input highest value of the rank for which PFs 
								#	will be computed (default is 5)	
rank_discretisation		=0.5		#	Input the discretisation of q (default is 0.5)								
scl_low					=2		#	Input lowest index (integer value) of the scale
								#	for which a linear regression will be performed on PFs  
scl_high				=10		#	Input highest index (integer value) of the scale
								#	for which a linear regression will be performed on PFs  
								 											
#####################################################################################
'''ROMA - COMPUTATION, PLOTTING, SAVING'''
#####################################################################################
compute_ROMA			=False	#	Choose whether to compute the MI (default is False)												
choose_ROMA_var			=0		#	Choose the variable for which the ROMA spectrum will 
								#	be computed it corresponds to the data column 
								#	(default is 0 which corresponds to the first data-column)
scl_roma_low			=0		#	Input the lowest integer value of the scale index for which 
								#	ROMA method will be applied (default is 0 and represents 1st scale)
scl_roma_high			=5		#	Input the highest integer value of the scale index for which 
								#	ROMA method will be applied (default is 5 and represents the 5th scale)
scl_roma_step			=1		#	Input the discretisation of the scales (default is 0)

s_roma_low				=0.		#	Input the lowest value of the ROMA test indices, s
								#	(default is 0.)
s_roma_high				=1.		#	Input the highest value of the ROMA test indices, s
								#	(default is 1.)
s_roma_step				=0.05	#	Input the discretisation of the ROMA test indices, s
								#	(default is 0.05)    
q_roma_low				=-2		#	Input the lowest integer value of the rank for which SFs 
								#	will be computed (default is -2)	
q_roma_high				=3		#	Input the highest integer value of the rank for which SFs 
								#	will be computed (default is 3)													 
q_roma_step				=1		#	Input the discretisation of the rank for which SFs 
								#	will be computed (default is 1)
ROMA_bins				=50		#	Input the number of bins for ROMA PDFs calculation
    
input_DY				=False 	#	Choose whether to manually input DY bins  
deltaYbins				=[[0.001,0.3],[0.3,0.6]] #If input_DY is set to True, input the 
								#	limits of DY bins following the default example: 
								#	[[0.001,0.3],[0.3,0.6], [...,...]]
draw_ROMA				=True	#	Choose whether to plot ROMA spectrum	    
save_ROMA				=True	# 	Choose whether to save ROMA spectrum								
    
#####################################################################################
'''MUTUAL INFORMATION - COMPUTATION, PLOTTING, SAVING'''
#####################################################################################
compute_MI				=False	#	Choose whether to compute the MI (default is False)
choose_MI_var			=0		#	Choose the variable for which PDFs will be computed - 
								#	it corresponds to the data column (default is 0 which 
								#	corresponds to the first data-column)
MI_bins					=10		#	Input the number of bins for joint and marginal 
								#	probability distributions
compute_Baseline		=False	#	Choose whether to estimate a baseline MI by randomising 
								#	(scrambling) the original data
number_of_scrambles		=2		#	Input the number of data randomisations								
draw_MI					=True	#	Choose whether to plot the MI
save_MI					=False	# 	Choose whether to save the MI								
							
#####################################################################################